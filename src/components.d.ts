/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AppCanvas {
        "addImageToCanvas": (imageString: string) => Promise<unknown>;
        "clearCanvas": () => Promise<void>;
        "clearGrid": () => Promise<unknown>;
        "color": string;
        "dragMode": boolean;
        "drawGrid": () => Promise<unknown>;
        "inkToShape": () => Promise<void>;
        "liveConnect": () => Promise<void>;
        "mode": string;
        "queryString": string;
        "resizeCanvas": (width?: number, height?: number) => Promise<void>;
        "saveCanvas": (name: string, fileHandle?: any) => Promise<any>;
        "savedDrawing": string | null;
        "shareCanvas": () => Promise<void>;
    }
    interface AppControls {
    }
    interface AppHome {
        "name": string;
        "username": string;
    }
    interface AppIntro {
    }
    interface AppRoot {
    }
    interface AppSettings {
    }
}
declare global {
    interface HTMLAppCanvasElement extends Components.AppCanvas, HTMLStencilElement {
    }
    var HTMLAppCanvasElement: {
        prototype: HTMLAppCanvasElement;
        new (): HTMLAppCanvasElement;
    };
    interface HTMLAppControlsElement extends Components.AppControls, HTMLStencilElement {
    }
    var HTMLAppControlsElement: {
        prototype: HTMLAppControlsElement;
        new (): HTMLAppControlsElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppIntroElement extends Components.AppIntro, HTMLStencilElement {
    }
    var HTMLAppIntroElement: {
        prototype: HTMLAppIntroElement;
        new (): HTMLAppIntroElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppSettingsElement extends Components.AppSettings, HTMLStencilElement {
    }
    var HTMLAppSettingsElement: {
        prototype: HTMLAppSettingsElement;
        new (): HTMLAppSettingsElement;
    };
    interface HTMLElementTagNameMap {
        "app-canvas": HTMLAppCanvasElement;
        "app-controls": HTMLAppControlsElement;
        "app-home": HTMLAppHomeElement;
        "app-intro": HTMLAppIntroElement;
        "app-root": HTMLAppRootElement;
        "app-settings": HTMLAppSettingsElement;
    }
}
declare namespace LocalJSX {
    interface AppCanvas {
        "color"?: string;
        "dragMode"?: boolean;
        "mode"?: string;
        "queryString"?: string;
        "savedDrawing"?: string | null;
    }
    interface AppControls {
        "onAllImages"?: (event: CustomEvent<any>) => void;
        "onClearCanvas"?: (event: CustomEvent<any>) => void;
        "onColorSelected"?: (event: CustomEvent<any>) => void;
        "onDoGrid"?: (event: CustomEvent<any>) => void;
        "onDoInkToShape"?: (event: CustomEvent<boolean>) => void;
        "onDoShare"?: (event: CustomEvent<any>) => void;
        "onDragMode"?: (event: CustomEvent<any>) => void;
        "onEraserMode"?: (event: CustomEvent<any>) => void;
        "onExport"?: (event: CustomEvent<any>) => void;
        "onLive"?: (event: CustomEvent<any>) => void;
        "onPenMode"?: (event: CustomEvent<any>) => void;
        "onSaveCanvas"?: (event: CustomEvent<any>) => void;
    }
    interface AppHome {
        "name"?: string;
        "username"?: string;
    }
    interface AppIntro {
    }
    interface AppRoot {
    }
    interface AppSettings {
    }
    interface IntrinsicElements {
        "app-canvas": AppCanvas;
        "app-controls": AppControls;
        "app-home": AppHome;
        "app-intro": AppIntro;
        "app-root": AppRoot;
        "app-settings": AppSettings;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-canvas": LocalJSX.AppCanvas & JSXBase.HTMLAttributes<HTMLAppCanvasElement>;
            "app-controls": LocalJSX.AppControls & JSXBase.HTMLAttributes<HTMLAppControlsElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-intro": LocalJSX.AppIntro & JSXBase.HTMLAttributes<HTMLAppIntroElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-settings": LocalJSX.AppSettings & JSXBase.HTMLAttributes<HTMLAppSettingsElement>;
        }
    }
}
